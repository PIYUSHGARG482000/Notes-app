// const name = 'Piyush';

// const greet = (name) =>{
//     console.log('Hello' + name);
// } 
// greet('Piyush');
// greet('Garg');

//Global Object

// console.log(global);
// setTimeout(() => {
//     console.log('Hello in the timeout');
//     clearInterval(int);
// }, 3000);

// const int = setInterval(() => {
//     console.log('in the Interval');
// }, 1000);

// console.log(__dirname);  //directory of the current location  of Project
// console.log(__filename); //directory of the current File working on it

// const mod = require('./people');

// console.log(mod);

// const os = require('os');
// console.log(os.platform(), os.homedir());


//Files in NodeJS

//reading a file we use fs module in NodeJS

const fs = require('fs');
// fs.readFile('./hero.txt', (err, data) => {
//     if(err){
//         console.log(err);
//     }
//     console.log(data.toString());
// });

//Writing a file we also use fs module
// fs.writeFile('./hero.txt','Hello World for Beginners', () => {
//     console.log('File is written successfully');
// });
//Working with directories in NODEJS
// if(!fs.existsSync('./assets')){     //It checks if the Folder we want to make is already present in the directory or not.
//     fs.mkdir('./assets', (err) => {
//         if(err){
//             console.log(err);
//         }
//         console.log('Folder created successfully');
//     });
// }else{                              //If folder is present then the else block executes the rmdir code to delete folder in the directory
//     fs.rmdir('./assets', (err) => {
//         if(err){
//             console.log(err);
//         }
//         console.log('Folder deleted Successfully');
//     });
// }
//Deleting the file in NODEJS
if(fs.existsSync('./deleteme.txt')){        //It firstly checks if the file is present or not.
    fs.unlink('./deleteme.txt', (err) => {
        console.log(err);
    });
    console.log('File deleted successfully');
}

//Streams in NODEJS to read and write Larger data
const readStream = fs.createReadStream('./hero.txt' , { encoding: 'utf8' });
const writeStream = fs.createWriteStream('./blog.txt');

// readStream.on('data', (chunk) => {
//     console.log('\n----NEW CHUNK----\n');
//     console.log(chunk.toString());
//     writeStream.write('\n---NEW CHUNK---\n');
//     writeStream.write(chunk);
// });

//Piping
readStream.pipe(writeStream);